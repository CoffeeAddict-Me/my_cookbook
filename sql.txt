patients

primary key patient_id	  INT
            first_name	  TEXT
            last_name	    TEXT
            gender	      CHAR(1)
            birth_date	  DATE
            city	        TEXT
primary key province_id	  CHAR(2)
            allergies	    TEXT
            height	      INT
            weight	      INT




/*SELECT
  first_name,
  last_name,
  MAX(height) AS height
FROM patients;*/


/*SELECT COUNT(*) AS total_patients
FROM patients
WHERE YEAR(birth_date) = 2010;*/


/*select first_name, last_name, province_name 
from patients
join province_names
ON patients.province_id=province_names.province_id ;*/


/*select  concat (first_name, " ", last_name) as full_name from patients*/

/*UPDATE patients set allergies = 'NKA' where allergies is null */



/*SELECT first_name, last_name FROM patients where weight between  100 and 120;*/


Show all columns for patients who have one of the following patient_ids:
1,45,534,879,1000
/*SELECT * FROM patients
WHERE patient_id IN (1,45,534,879,1000);*/

Show the total number of admissions
/*select Count(*) AS total_admissions from admissions;*/


Show all the columns from admissions where the patient was admitted and discharged on the same day.
/*select * from admissions where admission_date = discharge_date;*/

Show the patient id and the total number of admissions for patient_id 579.
/*select patient_id, count(*) as total_admissions from admissions where patient_id=579;*/

Based on the cities that our patients live in, show unique cities that are in province_id 'NS'?
/*select distinct(city) from patients where province_id='NS';*/

Write a query to find the first_name, last name and birth date of patients who has height greater than 160 and weight greater than 70
/*SELECT first_name, last_name, birth_date from patients where height>160 and weight>70;*/


Write a query to find list of patients first_name, last_name, and allergies where allergies are not null and are from the city of 'Hamilton'
/*select first_name, last_name, allergies from patients where allergies is not null and city='Hamilton';*/

Show unique birth years from patients and order them by ascending.
/*select distinct year(birth_date) from patients order by birth_date asc*/

Show unique first names from the patients table which only occurs once in the list.
For example, if two or more people are named 'John' in the first_name column then don't include their name in the output list. If only 1 person is named 'Leo' then include them in the output.
/*SELECT first_name FROM patients GROUP BY first_name HAVING count(*)  = 1;*/

Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long.
/*SELECT patient_id, first_name FROM patients WHERE first_name LIKE 's____%s';*/

SELECT
  patient_id,  first_name FROM patients WHERE   first_name LIKE 's%s'  AND len(first_name) >= 6;

Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'.
Primary diagnosis is stored in the admissions table.

select patients.patient_id, first_name, last_name
from patients
join admissions
On patients.patient_id = admissions.patient_id
where diagnosis= 'Dementia';

Display every patient's first_name.
Order the list by the length of each name and then by alphabetically.
/*select first_name from patients order by(len(first_name)) asc, first_name asc;*/

Show the total amount of male patients and the total amount of female patients in the patients table.
Display the two results in the same row.
SELECT
(select count(*) from patients where gender='M') as males, 
(SELECT count(*) from patients where gender='F') as females;


Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 'Morphine'. Show results ordered ascending by allergies then by first_name then by last_name.
/*select first_name, last_name, allergies 
from patients 
where allergies='Penicillin' 
or allergies='Morphine' 
order by allergies asc, first_name, last_name*/

Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis.
/*select patient_id, diagnosis from admissions GROUP BY patient_id, diagnosis HAVING count(*)  > 1;*/

Show the city and the total number of patients in the city.
Order from most to least patients and then by city name ascending.
/*select city, count(*) AS total_patients from patients group by city order by total_patients desc, city asc;*/





















